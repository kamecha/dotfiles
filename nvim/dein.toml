[[plugins]]
repo = 'vim-denops/denops.vim'

## lsp
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_source = '''
let g:lsp_diagnostics_enabled = 0
" let g:lsp_document_code_action_signs_enabled = 0
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

# 補完plugin
[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim']

# 補完UI
[[plugins]]
repo = 'Shougo/ddc-ui-native'
depends = ['denops.vim', 'ddc.vim']

# 補完source
[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'shun/ddc-vim-lsp'

# 補完filter
[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = '~/.vim/pack/plugins/start/ddc-matcher_lowerCamelCase'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

# スニペット
[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
depends = ['vim-vsnip']

# UI設定 ddu
[[plugins]]
repo = 'Shougo/ddu.vim'
depends = ['denops.vim']

# 補完UI
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
depends = ['denops.vim', 'ddu.vim']

# 補完Source
[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
depends = ['denops.vim', 'ddu.vim', 'ddu-kind-file']

# 補完Filter
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
depends = ['denops.vim', 'ddu.vim']

# 補完Kind
[[plugins]]
repo = 'Shougo/ddu-kind-file'
depends = ['denops.vim', 'ddu.vim']

# 補完Columns
# 今のところこれは省略しておく

# AI補完
[[plugins]]
repo = 'github/copilot.vim'

# あいまい検索
[[plugins]]
repo = 'junegunn/fzf'
build_on = '''
./install -all
'''
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'

# help日本語
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_source = 'set helplang=ja,en'

# SKK
[[plugins]]
repo = 'vim-skk/skkeleton'
depends = 'denops.vim'
hook_add = '''
call skkeleton#config({ 'globalJisyo': '~/dotfiles/SKK-JISYO.L' })
imap <C-j> <Plug>(skkeleton-enable)
cmap <C-j> <Plug>(skkeleton-enable)
'''

# 翻訳
[[plugins]]
repo = 'skanehira/denops-translate.vim'

# gccでコメントアウト
[[plugins]]
repo = 'tomtom/tcomment_vim'

# 部分編集
[[plugins]]
repo = 'thinca/vim-partedit'

# ステータスライン
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
" 0: never 1: only split 2: always
set laststatus=2
let g:lightline = {
\	'active': {
\		'left': [ ['mode', 'paste'], ['gitbranch', 'readonly', 'filename', 'modified'] ]
\	},
\	'component_function': {
\		'gitbranch': 'gitbranch#name'
\	},
\}
'''

# git branch
[[plugins]]
repo = 'itchyny/vim-gitbranch'

# カッコ補完
[[plugins]]
repo = 'cohama/lexima.vim'

# surround
[[plugins]]
repo = 'tpope/vim-surround'

# BadApple
[[plugins]]
repo = 'skanehira/badapple.vim'

# markdownのプレビュー
[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app && yarn install'

# color scheme
[[plugins]]
repo = 'EdenEast/nightfox.nvim'

[[plugins]]
repo = 'sainnhe/edge'
hook_add = '''
if has('termguicolors')
	set termguicolors
endif
let g:edge_style = 'aura'
let g:edge_better_performance = 1
'''
